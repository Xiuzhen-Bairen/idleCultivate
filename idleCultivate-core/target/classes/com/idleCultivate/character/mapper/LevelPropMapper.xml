<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idleCultivate.character.mapper.LevelPropMapper">
    <resultMap id="BaseResultMap" type="com.idleCultivate.character.model.LevelProp">
        <result column="id" property="id"/>
        <result column="job" property="job"/>
        <result column="hp" property="hp"/>
        <result column="level" property="level"/>
        <result column="strength" property="strength"/>
        <result column="agility" property="agility"/>
        <result column="stamina" property="stamina"/>
        <result column="intellect" property="intellect"/>
        <result column="create_user" property="createUser"/>
        <result column="update_user" property="updateUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_delete" property="isDelete"/>
        <result column="version" property="version"/>
    </resultMap>
    <!-- 添加 -->
    <insert id="insert">
        insert into character_level_prop (job, level, hp, strength, agility, intellect, stamina, create_user)
        values (#{job}, #{level}, #{hp}, #{strength}, #{agility}, #{intellect}, #{stamina}, #{createUser})
    </insert>
    <!-- 批量添加 -->
    <insert id="batchInsert">
        insert into character_level_prop (job, level, hp, strength, agility, intellect, stamina, create_user)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.job}, #{item.level}, #{item.hp}, #{item.strength}, #{item.agility}, #{item.intellect}, #{item.stamina}, #{item.createUser})
        </foreach>
    </insert>
    <!-- 修改 -->
    <update id="update">
        update character_level_prop
        set hp = #{hp},
            strength = #{strength},
            agility = #{agility},
            intellect = #{intellect},
            stamina = #{stamina},
            update_user = #{updateUser},
            version = version + 1
        where id = #{id} and is_delete = 0
    </update>
    <!-- 删除 -->
    <update id="delete" parameterType="String">
        update character_level_prop
        set is_delete = 1
        where id = #{id}
    </update>
    <!-- id查询 -->
    <select id="find" resultMap="BaseResultMap">
        select *
        from character_level_prop
        where id = #{id} and is_delete = 0
    </select>
    <!-- 列表查询总数 -->
    <select id="count" resultType="int">
        select count(1)
        from character_level_prop
        <where>
            is_delete = 0
            <if test="job != null">
                and job = #{job}
            </if>
            <if test="level != null">
                and level = #{level}
            </if>
        </where>
    </select>
    <!-- 列表查询 -->
    <select id="list" resultMap="BaseResultMap">
        select *
        from character_level_prop
        <where>
            is_delete = 0
            <if test="job != null">
                and job = #{job}
            </if>
            <if test="level != null">
                and level = #{level}
            </if>
        </where>
        order by job, level asc
        <if test="pageParam != null">
            limit ${(pageParam.pageIndex - 1) * pageParam.pageSize}, ${pageParam.pageSize}
        </if>
    </select>
    <!-- 根据职业和等级查询 -->
    <select id="findByJobAndLevel" resultMap="BaseResultMap">
        select *
        from character_level_prop
        where job = #{job} and level = #{level} and is_delete = 0
    </select>
</mapper>